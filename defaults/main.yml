---
dotfiles_user_home: "{{ ansible_env.HOME }}"
code_checkout_path: "{{ dotfiles_user_home }}/Code"
bin_directory: "{{ dotfiles_user_home }}/.local/bin"
xdg_share_dir: "{{ dotfiles_user_home }}/.local/share"
xdg_config_dir: "{{ dotfiles_user_home }}/.config"
nix_path: "{{ lookup('env', 'HOME') }}/.nix-profile"
nix_bin: "{{ nix_path }}/bin"
nix_share: "{{ nix_path }}/share"
nix_buildenv_name: dev-pack
nix_config: "{{ xdg_config_dir }}/nixpkgs/config.nix"
zsh_username: "{{ lookup('env', 'USER') }}"
git_name: "{{ lookup('env', 'DOTFILES_BOOTSTRAP_GIT_NAME') }}"
git_email: "{{ lookup('env', 'DOTFILES_BOOTSTRAP_GIT_EMAIL') }}"
gcc_bin: /usr/bin/gcc
gpp_bin: /usr/bin/g++
cmake_bin: "{{ nix_bin }}/cmake"
cpp_fedora_packages:
  - boost
  - boost-devel
  - clang
  - lld
  - cmake
  - ninja-build
  - flex
  - bison
cpp_ubuntu_packages:
  - build-essential
  - libboost-all-dev
  - cmake
  - ninja-build
  - flex
  - bison
nvim_share_dir: "{{ xdg_share_dir }}/nvim"
nvim_vim_plug_dir: "{{ nvim_share_dir }}/site/autoload"
nvim_plugged_dir: "{{ nvim_share_dir }}/plugged"
nvim_config_dir: "{{ xdg_config_dir }}/nvim"
nvim_init: "{{ nvim_config_dir }}/init.vim"
nvim_plugin_config_dir: "{{ nvim_config_dir }}/nvim-config"
nvim_coc_settings_file: "{{ nvim_config_dir }}/coc-settings.json"
nvim_filetype_settings_dir: "{{ nvim_config_dir }}/ftplugin"
nvim_cmake_copy_compile_commands: CMakeCopyCompileCommands
nvim_cmake_build_dir: build/linux-debug
clangd_bin: "{{ nix_bin }}/clangd"
ccls_clang_args: {}
ccls_tmp_dir: /tmp/ccls
clang_format_fileoption: file
vscode_cpptools_version: 1.6.0
vscode_cpptools_download: "{{ dotfiles_user_home }}/.local/vscode-cpptools"
vscode_cpptools_extension: cpptools-linux
vscode_cpptools_extension_path: "{{ vscode_cpptools_download }}/{{ vscode_cpptools_extension }}"
vscode_cpptools_vsix_file_path: "{{ vscode_cpptools_extension_path }}.vsix"
vscode_cpptools_extension_file_path: "{{ vscode_cpptools_extension_path }}/extension"
vscode_cpptools_executable_path: "{{ vscode_cpptools_extension_file_path }}/debugAdapters/bin/OpenDebugAD7"
vscode_cpptools_executable_path_mono: "{{ vscode_cpptools_extension_path }}/extensions/debugAdapters/bin/mono.linux"
vscode_cpptools_extension_json_config: "{{ vscode_cpptools_extension_file_path }}/cppdbg.ad7Engine.json"
vscode_cpptools_extension_neovim_json_config: "{{ vscode_cpptools_extension_file_path }}/debugAdapters/bin/nvim-dap.ad7Engine.json"
vscode_cpptools_runner: |
  dap.configurations.cpp = {
    {
      name = "Launch file",
      type = "cppdbg",
      request = "launch",
      program = function()
        return vim.fn.input('Path to executable: ', vim.fn.getcwd() .. '/', 'file')
      end,
      cwd = '${workspaceFolder}',
      stopOnEntry = true,
    },
    {
      name = 'Attach to gdbserver :1234',
      type = 'cppdbg',
      request = 'launch',
      MIMode = 'gdb',
      miDebuggerServerAddress = 'localhost:1234',
      miDebuggerPath = '/usr/bin/gdb',
      cwd = '${workspaceFolder}',
      program = function()
        return vim.fn.input('Path to executable: ', vim.fn.getcwd() .. '/', 'file')
      end,
    },
  }
  dap.configurations.c = dap.configurations.cpp
  dap.configurations.rust = dap.configurations.cpp
gccdiag_url: https://gitlab.com/andrejr/gccdiag
gccdiag_download: "{{ dotfiles_user_home }}/.local/gccdiag"
cpp_file_extensions:
  - c
  - cc
  - cpp
  - cxx
  - hpp
  - hxx
  - c++
  - objc
  - objcpp
  - mlir
  - llvm
  - tablegen
