command! CMakeDefaultConfigureOptions :CMake<Space>configure<Space>-G<Space>Ninja<Space>-DCMAKE_C_COMPILER=/usr/bin/gcc<Space>-DCMAKE_CXX_COMPILER=/usr/bin/g++
command! {{ nvim_cmake_copy_compile_commands }} :call system('ln -fs build/linux-debug/compile_commands.json .')
function! s:cmake_configure_func()
     :CMakeDefaultConfigureOptions
     :{{ nvim_cmake_copy_compile_commands }}
endfunction
command! -nargs=0 CMakeDefaultConfigureCommand call s:cmake_configure_func()
nmap <Leader>c [cmake-p]
xmap <Leader>c [cmake-p]
nnoremap <silent> [cmake-p]b :CMake build<CR>
nnoremap <silent> [cmake-p]a :CMake build_all<CR>
nnoremap <silent> [cmake-p]r :CMake run<CR>
nnoremap <silent> [cmake-p]d :CMake debug<CR>
nnoremap <silent> [cmake-p]l :CMake clean<CR>
nnoremap <silent> [cmake-p]t :CMake set_target_arguments<Space>
nnoremap <silent> [telescope-p]c :Telescope cmake select_target<CR>
nnoremap <silent> [telescope-p]b :Telescope cmake select_build_type<CR>
let g:cmake_asyncrun_options={'mode': 'term', 'pos': 'floaterm', 'save': 2}
let g:cmake_target_asyncrun_options={'mode': 'term', 'pos': 'floaterm'}
