---
- name: CCLS | Install Highlighting Plugin for Neovim | lineinfile
  changed_when: false
  lineinfile:
    path: "{{ nvim_init }}"
    insertbefore: ".*Language Server Protocol Providers\\(End\\).*"
    line: "Plug 'jackguo380/vim-lsp-cxx-highlight'"

- name: CCLS | Configure ccls for Neovim | blockinfile
  changed_when: false
  blockinfile:
    path: "{{ nvim_coc_settings_file }}"
    marker: "// !-- {mark} CCLS Language Server Config --"
    insertbefore: ".*LSP Provider\\(End\\).*"
    block: |
      "ccls": {
        "command": "{{ nix_bin }}/ccls",
        "filetypes": ["c", "cc", "cpp", "cxx", "c++", "objc", "objcpp"],
        "rootPatterns": [".ccls", "compile_commands.json", ".git/", ".vscode"],
        "initializationOptions": {
          "cache": {
            "directory": "{{ ccls_tmp_dir }}"
          },
          "highlight": { "lsRanges" : true },
          // clang args(begin)
          // clang args(end)
        }
      },

- name: CMake | Install CMake Plugin for Neovim | lineinfile
  changed_when: false
  lineinfile:
    path: "{{ nvim_init }}"
    insertbefore: ".*Language Server Protocol Providers\\(End\\).*"
    line: "Plug 'Shatur/neovim-cmake'"

- name: CMake | Configure cmake for Neovim | blockinfile
  changed_when: false
  blockinfile:
    path: "{{ nvim_init }}"
    marker: '" !-- {mark} CMake Config --'
    insertbefore: ".*Extra Plugin Settings\\(End\\).*"
    block: |
      lua << EOF
          require('telescope').load_extension('cmake')
      EOF

- name: VSCode CppTools | Configure vscode-cpptools for Neovim | blockinfile
  changed_when: false
  blockinfile:
    path: "{{ nvim_init }}"
    marker: '" !-- {mark} VSCode CppTools Config --'
    insertbefore: ".*Extra Plugin Settings\\(End\\).*"
    block: |
      lua << EOF
        local dap = require('dap')
        dap.adapters.cppdbg = {
          type = 'executable',
          command = '{{ vscode_cpptools_executable_path }}',
        }

        {{ vscode_cpptools_runner }}
      EOF

- name: VSCode CppTools | Configure vscode-cpptools for Neovim | blockinfile
  changed_when: false
  blockinfile:
    path: "{{ nvim_init }}"
    marker: '" !-- {mark} Neoformat C/C++ Config --'
    insertbefore: ".*Neoformat Settings\\(End\\).*"
    block: |
      let g:neoformat_cpp_clangformat = {
        \ 'exe': '{{ nix_bin }}/clang-format',
        \ 'args': ['--style={{ clang_format_fileoption }}']
      \}
      let g:neoformat_enabled_cpp = ['clangformat']
      let g:neoformat_enabled_c = ['clangformat']

- name: Neomake | Install Neomake C++ Settings | blockinfile
  changed_when: false
  blockinfile:
    path: "{{ nvim_init }}"
    marker: '" !-- {mark} ALE C/C++ Config --'
    insertbefore: ".*ALE Settings\\(End\\).*"
    block: |
      let g:ale_c_parse_compile_commands=1
      let g:ale_linters = {
      \   'c': ['gcc', 'g++'],
      \   'cpp': ['gcc', 'g++'],
      \}
